// Code generated by github.com/Gardego5/gohtml/codegen; DO NOT EDIT.

package html


// The `a` HTML element (or *anchor* element), with its `href`
// attribute, creates a hyperlink to webpages, files, email
// addresses, locations in the same page, or anything else a URL
// can address.
type A []any
func (tag A) Render() HTMLElement { return Element("a", tag...) }

type Abbr []any
func (tag Abbr) Render() HTMLElement { return Element("abbr", tag...) }

type Address []any
func (tag Address) Render() HTMLElement { return Element("address", tag...) }

type Area Attrs
func (tag Area) Render() HTMLElement { return AttrsElement("area", tag...) }

type Article []any
func (tag Article) Render() HTMLElement { return Element("article", tag...) }

type Aside []any
func (tag Aside) Render() HTMLElement { return Element("aside", tag...) }

type Audio []any
func (tag Audio) Render() HTMLElement { return Element("audio", tag...) }

type B []any
func (tag B) Render() HTMLElement { return Element("b", tag...) }

type Base Attrs
func (tag Base) Render() HTMLElement { return AttrsElement("base", tag...) }

type Bdi []any
func (tag Bdi) Render() HTMLElement { return Element("bdi", tag...) }

type Bdo []any
func (tag Bdo) Render() HTMLElement { return Element("bdo", tag...) }

type Blockquote []any
func (tag Blockquote) Render() HTMLElement { return Element("blockquote", tag...) }

type Body []any
func (tag Body) Render() HTMLElement { return Element("body", tag...) }

type Br Attrs
func (tag Br) Render() HTMLElement { return AttrsElement("br", tag...) }

type Button []any
func (tag Button) Render() HTMLElement { return Element("button", tag...) }

type Canvas []any
func (tag Canvas) Render() HTMLElement { return Element("canvas", tag...) }

type Caption []any
func (tag Caption) Render() HTMLElement { return Element("caption", tag...) }

type Cite []any
func (tag Cite) Render() HTMLElement { return Element("cite", tag...) }

type Code []any
func (tag Code) Render() HTMLElement { return Element("code", tag...) }

type Col Attrs
func (tag Col) Render() HTMLElement { return AttrsElement("col", tag...) }

type Colgroup []any
func (tag Colgroup) Render() HTMLElement { return Element("colgroup", tag...) }

type Data []any
func (tag Data) Render() HTMLElement { return Element("data", tag...) }

type Datalist []any
func (tag Datalist) Render() HTMLElement { return Element("datalist", tag...) }

type Dd []any
func (tag Dd) Render() HTMLElement { return Element("dd", tag...) }

type Del []any
func (tag Del) Render() HTMLElement { return Element("del", tag...) }

type Details []any
func (tag Details) Render() HTMLElement { return Element("details", tag...) }

type Dfn []any
func (tag Dfn) Render() HTMLElement { return Element("dfn", tag...) }

type Dialog []any
func (tag Dialog) Render() HTMLElement { return Element("dialog", tag...) }

type Div []any
func (tag Div) Render() HTMLElement { return Element("div", tag...) }

type Dl []any
func (tag Dl) Render() HTMLElement { return Element("dl", tag...) }

type Dt []any
func (tag Dt) Render() HTMLElement { return Element("dt", tag...) }

type Em []any
func (tag Em) Render() HTMLElement { return Element("em", tag...) }

type Embed Attrs
func (tag Embed) Render() HTMLElement { return AttrsElement("embed", tag...) }

type Fieldset []any
func (tag Fieldset) Render() HTMLElement { return Element("fieldset", tag...) }

type Figcaption []any
func (tag Figcaption) Render() HTMLElement { return Element("figcaption", tag...) }

type Figure []any
func (tag Figure) Render() HTMLElement { return Element("figure", tag...) }

type Footer []any
func (tag Footer) Render() HTMLElement { return Element("footer", tag...) }

type Form []any
func (tag Form) Render() HTMLElement { return Element("form", tag...) }

type H1 []any
func (tag H1) Render() HTMLElement { return Element("h1", tag...) }

type H2 []any
func (tag H2) Render() HTMLElement { return Element("h2", tag...) }

type H3 []any
func (tag H3) Render() HTMLElement { return Element("h3", tag...) }

type H4 []any
func (tag H4) Render() HTMLElement { return Element("h4", tag...) }

type H5 []any
func (tag H5) Render() HTMLElement { return Element("h5", tag...) }

type H6 []any
func (tag H6) Render() HTMLElement { return Element("h6", tag...) }

type Head []any
func (tag Head) Render() HTMLElement { return Element("head", tag...) }

type Header []any
func (tag Header) Render() HTMLElement { return Element("header", tag...) }

type Hgroup []any
func (tag Hgroup) Render() HTMLElement { return Element("hgroup", tag...) }

type Hr Attrs
func (tag Hr) Render() HTMLElement { return AttrsElement("hr", tag...) }

type Html []any
func (tag Html) Render() HTMLElement { return Element("html", tag...) }

type I []any
func (tag I) Render() HTMLElement { return Element("i", tag...) }

type Iframe []any
func (tag Iframe) Render() HTMLElement { return Element("iframe", tag...) }

type Img Attrs
func (tag Img) Render() HTMLElement { return AttrsElement("img", tag...) }

type Input Attrs
func (tag Input) Render() HTMLElement { return AttrsElement("input", tag...) }

type Ins []any
func (tag Ins) Render() HTMLElement { return Element("ins", tag...) }

type Kbd []any
func (tag Kbd) Render() HTMLElement { return Element("kbd", tag...) }

type Label []any
func (tag Label) Render() HTMLElement { return Element("label", tag...) }

type Legend []any
func (tag Legend) Render() HTMLElement { return Element("legend", tag...) }

type Li []any
func (tag Li) Render() HTMLElement { return Element("li", tag...) }

type Link Attrs
func (tag Link) Render() HTMLElement { return AttrsElement("link", tag...) }

type Main []any
func (tag Main) Render() HTMLElement { return Element("main", tag...) }

type Map []any
func (tag Map) Render() HTMLElement { return Element("map", tag...) }

type Mark []any
func (tag Mark) Render() HTMLElement { return Element("mark", tag...) }

type Math []any
func (tag Math) Render() HTMLElement { return Element("math", tag...) }

type Menu []any
func (tag Menu) Render() HTMLElement { return Element("menu", tag...) }

type Menuitem Attrs
func (tag Menuitem) Render() HTMLElement { return AttrsElement("menuitem", tag...) }

type Meta Attrs
func (tag Meta) Render() HTMLElement { return AttrsElement("meta", tag...) }

type Meter []any
func (tag Meter) Render() HTMLElement { return Element("meter", tag...) }

type Nav []any
func (tag Nav) Render() HTMLElement { return Element("nav", tag...) }

type Noscript []any
func (tag Noscript) Render() HTMLElement { return Element("noscript", tag...) }

type Object []any
func (tag Object) Render() HTMLElement { return Element("object", tag...) }

type Ol []any
func (tag Ol) Render() HTMLElement { return Element("ol", tag...) }

type Optgroup []any
func (tag Optgroup) Render() HTMLElement { return Element("optgroup", tag...) }

type Option []any
func (tag Option) Render() HTMLElement { return Element("option", tag...) }

type Output []any
func (tag Output) Render() HTMLElement { return Element("output", tag...) }

type P []any
func (tag P) Render() HTMLElement { return Element("p", tag...) }

type Param Attrs
func (tag Param) Render() HTMLElement { return AttrsElement("param", tag...) }

type Picture []any
func (tag Picture) Render() HTMLElement { return Element("picture", tag...) }

type Pre []any
func (tag Pre) Render() HTMLElement { return Element("pre", tag...) }

type Progress []any
func (tag Progress) Render() HTMLElement { return Element("progress", tag...) }

type Q []any
func (tag Q) Render() HTMLElement { return Element("q", tag...) }

type Rb []any
func (tag Rb) Render() HTMLElement { return Element("rb", tag...) }

type Rp []any
func (tag Rp) Render() HTMLElement { return Element("rp", tag...) }

type Rt []any
func (tag Rt) Render() HTMLElement { return Element("rt", tag...) }

type Rtc []any
func (tag Rtc) Render() HTMLElement { return Element("rtc", tag...) }

type Ruby []any
func (tag Ruby) Render() HTMLElement { return Element("ruby", tag...) }

type S []any
func (tag S) Render() HTMLElement { return Element("s", tag...) }

type Samp []any
func (tag Samp) Render() HTMLElement { return Element("samp", tag...) }

type Script []any
func (tag Script) Render() HTMLElement { return Element("script", tag...) }

type Search []any
func (tag Search) Render() HTMLElement { return Element("search", tag...) }

type Section []any
func (tag Section) Render() HTMLElement { return Element("section", tag...) }

type Select []any
func (tag Select) Render() HTMLElement { return Element("select", tag...) }

type Slot []any
func (tag Slot) Render() HTMLElement { return Element("slot", tag...) }

type Small []any
func (tag Small) Render() HTMLElement { return Element("small", tag...) }

type Source Attrs
func (tag Source) Render() HTMLElement { return AttrsElement("source", tag...) }

type Span []any
func (tag Span) Render() HTMLElement { return Element("span", tag...) }

type Strong []any
func (tag Strong) Render() HTMLElement { return Element("strong", tag...) }

type Style []any
func (tag Style) Render() HTMLElement { return Element("style", tag...) }

type Sub []any
func (tag Sub) Render() HTMLElement { return Element("sub", tag...) }

type Summary []any
func (tag Summary) Render() HTMLElement { return Element("summary", tag...) }

type Sup []any
func (tag Sup) Render() HTMLElement { return Element("sup", tag...) }

type Svg []any
func (tag Svg) Render() HTMLElement { return Element("svg", tag...) }

type Table []any
func (tag Table) Render() HTMLElement { return Element("table", tag...) }

type Tbody []any
func (tag Tbody) Render() HTMLElement { return Element("tbody", tag...) }

type Td []any
func (tag Td) Render() HTMLElement { return Element("td", tag...) }

type Template []any
func (tag Template) Render() HTMLElement { return Element("template", tag...) }

type Textarea []any
func (tag Textarea) Render() HTMLElement { return Element("textarea", tag...) }

type Tfoot []any
func (tag Tfoot) Render() HTMLElement { return Element("tfoot", tag...) }

type Th []any
func (tag Th) Render() HTMLElement { return Element("th", tag...) }

type Thead []any
func (tag Thead) Render() HTMLElement { return Element("thead", tag...) }

type Time []any
func (tag Time) Render() HTMLElement { return Element("time", tag...) }

type Title []any
func (tag Title) Render() HTMLElement { return Element("title", tag...) }

type Tr []any
func (tag Tr) Render() HTMLElement { return Element("tr", tag...) }

type Track Attrs
func (tag Track) Render() HTMLElement { return AttrsElement("track", tag...) }

type U []any
func (tag U) Render() HTMLElement { return Element("u", tag...) }

type Ul []any
func (tag Ul) Render() HTMLElement { return Element("ul", tag...) }

type Var []any
func (tag Var) Render() HTMLElement { return Element("var", tag...) }

type Video []any
func (tag Video) Render() HTMLElement { return Element("video", tag...) }

type Wbr Attrs
func (tag Wbr) Render() HTMLElement { return AttrsElement("wbr", tag...) }
